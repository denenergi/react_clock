{"version":3,"sources":["Component/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerId","this","window","setInterval","setState","console","log","toLocaleTimeString","clearInterval","clockName","props","className","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","handleDocumentClickUp","handleDocumentClickDown","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAG1BM,QAAQC,IAAI,EAAKT,MAAMC,KAAKS,wBAC3B,OAbP,kCAgBE,WACEC,cAAcP,KAAKD,WAjBvB,oBAoBE,WACE,IAAQS,EAAcR,KAAKS,MAAnBD,UACAX,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAFL,UAOE,sBAAME,UAAU,cAAhB,SACGb,EAAKS,8BAjChB,GAA2BK,aCN3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEtB,MAAyB,CACvBY,UAAWI,IACXO,UAAU,GAHd,EAiBEC,sBAAwB,WACtB,EAAKjB,SAAS,CACZgB,UAAU,KAnBhB,EAuBEE,wBAA0B,WACxB,EAAKlB,SAAS,CACZgB,UAAU,KAzBhB,uDAME,WAAqB,IAAD,OAClBlB,OAAOC,aAAY,WACjB,EAAKC,SAAS,CACZK,UAAWI,QAEZ,MAEHU,SAASC,iBAAiB,QAASvB,KAAKoB,uBACxCE,SAASC,iBAAiB,cAAevB,KAAKqB,2BAdlD,oBA6BE,WACE,MAAgCrB,KAAKJ,MAA7BuB,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,UAElB,OACE,sBAAKE,UAAU,MAAf,UACE,6CACCS,GAAY,cAAC,EAAD,CAAOX,UAAWA,WAnCvC,GAAyBG,aCZzBa,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.ac7105ec.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  time: Date,\n};\n\ntype Props = {\n  clockName: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    time: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ time: new Date() });\n\n      // eslint-disable-next-line\n      console.log(this.state.time.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        time is\n\n        <span className=\"Clock__time\">\n          {time.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Component/Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: getRandomName(),\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    document.addEventListener('click', this.handleDocumentClickUp);\n    document.addEventListener('contextmenu', this.handleDocumentClickDown);\n  }\n\n  handleDocumentClickUp = () => {\n    this.setState({\n      hasClock: true,\n    });\n  };\n\n  handleDocumentClickDown = () => {\n    this.setState({\n      hasClock: false,\n    });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}